#!/Melify/bin/mac/tclkit

namespace eval queue {
    set x [list]
    set ticks 0
    set start "B"

    ######################################################
    ####
    ######################################################
    proc init {ticks} {
	set queue::x [list]
	set queue::ticks $ticks
    }

    ######################################################
    ####
    ######################################################
    proc add {val} {
	lappend queue::x $val

	if {[llength $queue::x] > $queue::ticks} {
	    set queue::x [lrange $queue::x end-[expr $queue::ticks -1] end]
	}

	dir
    }
    
    ######################################################
    ####
    ######################################################
    proc dir {} {
	if {[llength $queue::x] != $queue::ticks} {
	    return
	}

	set s1 [lsort -increasing -real $queue::x]
	set s2 [lsort -decreasing -real $queue::x]
	
	if {$s1 == $queue::x} {
	    if {$queue::start == "B"} {
		return ""
	    } else {
		process "S"

		queue::init $queue::ticks
		set queue::start "B"
	    }
	}

	if {$s2 == $queue::x} {
	    if {$queue::start == "B"} {
		process "B"

		queue::init $queue::ticks
		set queue::start "S"
	    } else {
		return ""
	    }
	}

	return ""
    }
}

######################################################
####
######################################################
proc process {type} {
    switch $type {
	"B" {
	    puts "B: $queue::x"
	}
	"S" {
	    puts "S: $queue::x\n"
	}
    }
}

######################################################
####
######################################################
proc test {ticks date symbol timeout} {
    queue::init $ticks

    source "~/Dropbox/Trader/stocks/AAPL/$date/$symbol.txt"

    foreach k [dict key $stocks] {
	foreach {i j} [dict get $stocks $k] {
	    set a($i) $j
	}
	
	#puts -nonewline ".";flush stdout
	
	queue::add $a(lastPrice)

	after $timeout
    }
}

test 5 2019-11-19 AAPL 10
