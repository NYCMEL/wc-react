#!/Melify/bin/mac/tclkit

namespace eval queue {
    set data [list]
    set ticks 0
    set start "B"

    ######################################################
    ####
    ######################################################
    proc init {ticks} {
	set queue::data [list]
	set queue::ticks $ticks
    }

    ######################################################
    ####
    ######################################################
    proc add {} {
	upvar t t
	lappend queue::data $t(lastPrice)
	
	if {[llength $queue::data] > $queue::ticks} {
	    set queue::data [lrange $queue::data end-[expr $queue::ticks -1] end]
	}
	
	dir
    }
    
    ######################################################
    ####
    ######################################################
    proc dir {} {
	upvar t t

	if {[llength $queue::data] != $queue::ticks} {
	    return
	}

	set s1 [lsort -increasing -real $queue::data]
	set s2 [lsort -decreasing -real $queue::data]
	
	if {$s1 == $queue::data} {
	    if {$queue::start != "B"} {
		puts "S: $queue::data"
		
		# RESET START
		set queue::start "B"

		puts [array get t]
	    }
	}

	if {$s2 == $queue::data} {
	    if {$queue::start != "S"} {
		puts "B: $queue::data"

		# RESET START
		set queue::start "S"

		puts [array get t]
	    }
	}
    }
}

######################################################
####
######################################################
proc test {ticks date symbol timeout} {
    queue::init $ticks

    source "~/Dropbox/Trader/stocks/AAPL/$date/$symbol.txt"

    foreach k [dict key $stocks] {
	foreach {i j} [dict get $stocks $k] {
	    set t($i) $j
	}
	
	#puts -nonewline ".";flush stdout
	
	queue::add

	after $timeout
    }
}

#RUN TEST SCRIPT
test 5 2019-11-19 AAPL 10
