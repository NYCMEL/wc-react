#!/Melify/bin/mac/tclkit

if {$argc != 1} {
    puts "\nUSAGE: codegen <file-name>\n"
    exit
}

lappend auto_path "/Melify/mtk/dev/tk/src/utl"

######################################################
##### 
######################################################
set fi [open $argv r]
#set fo [open out.$argv w]
set fo stdout
set save 1

######################################################
##### 
######################################################
proc parse {line} {
    global cfg

    catch {unset cfg}

    set line [string range $line 5 end-1]
    regsub -all "\"" $line "" line

    foreach i [split $line] {
	set j [split $i =]
	set cfg([lindex $j 0]) [lindex $j 1]
    }

    #parray cfg
}

######################################################
##### 
######################################################
proc generate {line} {
    global fi fo cfg

    puts $fo "GENERATED CODE GOES HERE"
}

######################################################
##### 
######################################################
proc process {line} {
    global fi fo cfg

    parse $line

    #CLEAR ALL PRIOR CODE
    while {[gets $fi tmp] >= 1} {
	if {[string first "</mtk>" $tmp] !=-1} {
	    if {$cfg(update) == 1} {
		generate $line
	    }
	}

	puts $fo $tmp
    }

    puts $fo "</mtk>"
}

while {[gets $fi line] >= 1} {
    if {$save == 1} {puts $fo $line}

    set line [string trim $line]

    if {[string first "<mtk " $line] !=-1} {
	#FOUND A COMPONENT
	process $line
    }
}

