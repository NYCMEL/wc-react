#!/Melify/bin/mac/tclkit

if {$argc != 1} {
    puts "\nUSAGE: codegen <file-name>\n"
    exit
}

lappend auto_path /Melify/mtk/dev/tk/src/utl\
    /Melify/mtk/dev/tk/lib/components/fm\
    /Melify/mtk/dev/tk/src/cgi\
    /Melify/mtk/dev/tk/src/utl\
    /Melify/mtk/dev/tk/src/db\
    /Melify/mtk/dev/tk/src/eng

######################################################
##### 
######################################################
set url "http://localhost/mtk/render"
set fi [open $argv r]
set fo [open out.$argv w]
#set fo stdout

######################################################
##### 
######################################################
proc parse {line} {
    global cfg

    catch {unset cfg}

    set line [string range $line 5 end-1]
    regsub -all "\"" $line "" line

    foreach i [split $line] {
	set j [split $i =]
	set cfg([lindex $j 0]) [lindex $j 1]
    }
}

######################################################
##### 
######################################################
proc generate {line} {
    global fi fo cfg url

    if {0} {
	set menus {melify%20MELIFY%20download%20DOWNLOADS}
	set x [exec http $url?callback=fm::component::header::test&logo=/tk/img/common/mel.gif&menus=$menus&id=my-header&isolate=0]
    } else {
	set x [exec http $url?callback=fm::component::header::test&id=my-header&isolate=0]
    }

    # ADD ALL REQUIRED SCRIPTS
    puts $fo [fm::component::header::required]

    set x1 [string first "guts START" $x]; incr x1 14
    set x2 [string first "guts END"   $x]; incr x2 -26
    
    set guts [string range $x $x1 $x2]

    puts $fo "$guts"
}

######################################################
##### 
######################################################
proc process {line} {
    global fi fo cfg url

    parse $line

    if {$cfg(update) == 1} {
	#CLEAR ALL PRIOR CODE
	while {[gets $fi tmp] >= 1} {
	    if {[string first "</mtk>" $tmp] !=-1} {
		generate $line
		break
	    }
	}

	puts $fo "</mtk>"
    }
}

######################################################
##### 
######################################################
while {[gets $fi line] >= 1} {
    puts $fo $line

    set line [string trim $line]

    if {[string first "<mtk " $line] !=-1} {
	#FOUND A COMPONENT
	process $line
    }
}
